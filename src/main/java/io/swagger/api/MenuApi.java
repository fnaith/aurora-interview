/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;
import io.swagger.model.Menu;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-23T14:57:31.939+08:00")

@Api(value = "menu", description = "the menu API")
@RequestMapping(value = "/v1")
public interface MenuApi {

    @ApiOperation(value = "Create menu", nickname = "createMenu", notes = "", response = Menu.class, responseContainer = "List", tags={ "menu", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Menu.class, responseContainer = "List") })
    @RequestMapping(value = "/menu",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<List<Menu>> createMenu(@ApiParam(value = "" ,required=true )  @Valid @RequestBody List<Menu> body);


    @ApiOperation(value = "Delete menu", nickname = "deleteMenu", notes = "", tags={ "menu", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid menu id supplied"),
        @ApiResponse(code = 404, message = "Menu not found") })
    @RequestMapping(value = "/menu/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteMenu(@ApiParam(value = "",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "List all menu", nickname = "listMenu", notes = "", response = Menu.class, responseContainer = "List", tags={ "menu", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Menu.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid menu id supplied"),
        @ApiResponse(code = 404, message = "Menu not found") })
    @RequestMapping(value = "/menu",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Menu>> listMenu();


    @ApiOperation(value = "Get menu by menu id", nickname = "readMenu", notes = "", response = Menu.class, tags={ "menu", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Menu.class),
        @ApiResponse(code = 400, message = "Invalid menu id supplied"),
        @ApiResponse(code = 404, message = "Menu not found") })
    @RequestMapping(value = "/menu/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Menu> readMenu(@ApiParam(value = "",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Updated menu", nickname = "updateMenu", notes = "", response = Menu.class, tags={ "menu", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Menu.class),
        @ApiResponse(code = 400, message = "Invalid menu supplied"),
        @ApiResponse(code = 404, message = "Menu not found") })
    @RequestMapping(value = "/menu/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Menu> updateMenu(@ApiParam(value = "",required=true) @PathVariable("id") String id,@ApiParam(value = "Updated menu object" ,required=true )  @Valid @RequestBody Menu body);

}
