{"version":3,"sources":["store/MenuForm.tsx","store/AppStore.tsx","store/global_data.tsx","components/SelectTabs.tsx","components/SelectTab.tsx","components/SelectPanel.tsx","components/menu/AddMenuForm.tsx","components/menu/SubmitMenuForm.tsx","components/menu/MenuFormName.tsx","components/menu/MenuFormContent.tsx","components/menu/MenuForm.tsx","components/menu/MenuFormList.tsx","components/menu/CreateMenu.tsx","components/menu/MenuInfoName.tsx","components/menu/MenuInfoContent.tsx","components/menu/MenuInfo.tsx","components/menu/MenuInfoList.tsx","components/menu/MenuControl.tsx","components/user/UserInfo.tsx","components/user/UserInfoList.tsx","components/Logout.tsx","components/ControlPanel.tsx","App.tsx","theme.tsx","index.tsx"],"names":["MenuForm","name","content","this","logRequestError","url","error","msg","console","alert","AppStore","_apiPath","_initted","_updateControlPanel","_menuForms","_menuInfos","_userInfos","timestamp","date","Date","options","timeZone","DEFAULT_TIMEZONE","hour12","toLocaleString","DEFAULT_LOCALE","readMenus","log","updateControlPanel","menuForm","push","index","splice","callback","requestOptions","method","headers","body","JSON","stringify","menuForms","map","id","createdBy","createdAt","updatedBy","updatedAt","fetch","then","response","status","json","catch","appStore","menuInfos","menuId","i","length","menuInfo","window","location","href","global_data","SelectTabs","withStyles","root","minHeight","height","Tabs","SelectTab","minWidth","fontSize","padding","Tab","TeamListPanel","props","expanded","children","AddMenuForm","Button","variant","color","onClick","event","addMenuForm","SubmitMenuForm","createMenus","MenuFormName","TextField","label","defaultValue","margin","onChange","input","target","value","MenuFormContent","removeMenuForm","MenuFormList","key","CreateMenu","Grid","container","item","xs","MenuInfoName","MenuInfoContent","MenuInfo","disabled","formatTime","saveMenuInfo","removeMenuInfo","MenuInfoList","MenuControl","UserInfo","userInfos","firstName","lastName","email","manager","UserInfoList","userInfo","readUsers","logout","ControlPanel","useState","flag","setFlag","init","tabValue","setTabValue","scrollButtons","indicatorColor","textColor","SelectPanel","Logout","whyDidYouRender","appStyle","width","App","style","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","require","React","trackAllPureComponents","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.1ac533d5.chunk.js","sourcesContent":["class MenuForm {\n  name: string;\n  content: string;\n\n  constructor() {\n    this.name = \"\";\n    this.content = \"\";\n  }\n}\n  \nexport default MenuForm;\n","import MenuForm from './MenuForm';\n\nfunction logRequestError(url: string, error: any) {\n  const msg: string = `{url=${url},error=${error}}`;\n  console.error(msg);\n  alert(msg);\n}\n\nclass AppStore {\n  private static readonly DEFAULT_TIMEZONE: string = 'Asia/Taipei';\n  private static readonly DEFAULT_LOCALE: string = 'en-US';\n\n  private readonly _apiPath = '/v1';//`${window.location.protocol}//${window.location.hostname}:8080`;\n\n  private _initted: boolean;\n  private _updateControlPanel: any;\n  private _menuForms: MenuForm[];\n  private _menuInfos: any;\n  private _userInfos: any;\n\n  constructor() {\n    this._initted = false;\n    this._menuForms = [];\n    this._menuInfos = [];\n    this._userInfos = [];\n  }\n\n  get updateControlPanel(): any {\n    return this._updateControlPanel;\n  }\n\n  set updateControlPanel(updateControlPanel: any) {\n    this._updateControlPanel = updateControlPanel;\n  }\n\n  get menuForms(): MenuForm[] {\n    return this._menuForms;\n  }\n\n  get menuInfos(): any {\n    return this._menuInfos;\n  }\n\n  get userInfos(): any {\n    return this._userInfos;\n  }\n\n  formatTime(timestamp: number): string {\n    const date: Date = new Date(timestamp);\n    const options: any = { timeZone: AppStore.DEFAULT_TIMEZONE, hour12: false };\n    const formattedDateTime: string = date.toLocaleString(AppStore.DEFAULT_LOCALE, options);\n    return formattedDateTime;\n  }\n\n  init() {\n    if (this._initted) {\n      return;\n    }\n    this.readMenus(console.log);\n    this.updateControlPanel();\n    this._initted = true;\n  }\n\n  addMenuForm() {\n    var menuForm: MenuForm = new MenuForm();\n    menuForm.name = 'Menu Name';\n    menuForm.content = 'Menu Content';\n    this._menuForms.push(menuForm);\n  }\n\n  removeMenuForm(index: number) {\n    this._menuForms.splice(index, 1);\n  }\n\n  createMenus(callback: any) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.menuForms.map(menuForm => {\n        return {id: -1, name: menuForm.name, content: menuForm.content,\n          createdBy: \"\", createdAt: 0, updatedBy: '', updatedAt: 0};\n      }))\n    };\n    const url = `${this._apiPath}/menu`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        this._menuForms = [];\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  readMenus(callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/menu`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore._menuInfos = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  readUsers(callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `/user/list`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore._userInfos = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  saveMenuInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.menuInfos[index])\n    };\n    const url = `${this._apiPath}/menu/${this.menuInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore.menuInfos[index] = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  removeMenuInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/menu/${this.menuInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => {\n        appStore._menuInfos.splice(index, 1);\n        callback();\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  getMenuName(menuId: number) {\n    for (let i = 0; i < this.menuInfos.length; ++i) {\n      const menuInfo: any = this.menuInfos[i];\n      if (menuId == menuInfo.id) {\n        return `(${menuInfo.id})${menuInfo.name}`;\n      }\n    }\n    return 'Unknown Menu';\n  }\n\n  logout() {\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `/login?logout`;\n    window.location.href = url;\n  }\n}\n\nexport default AppStore;\n","import AppStore from './AppStore';\n\nconst global_data: AppStore = new AppStore();\n\nexport default global_data;\n","import { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst tabHeight = '32px';\n\nconst SelectTabs = withStyles({\n  root: {\n    minHeight: tabHeight,\n    height: tabHeight\n  }\n})(Tabs);\n\nexport default SelectTabs;\n","import { withStyles } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\n\nconst tabHeight = '32px';\n\nconst SelectTab = withStyles({\n  root: {\n    minWidth: 90,\n    minHeight: tabHeight,\n    height: tabHeight,\n    fontSize: '1.125rem',\n    padding: 8\n  }\n})(Tab);\n\nexport default SelectTab;\n","import React from 'react';\n\ninterface Props {\n  expanded: boolean;\n  children: any;\n}\n\nconst TeamListPanel = function (props: Props) {\n  const { expanded, children } = props;\n\n  return (\n    <div>\n      {\n        expanded ?\n        children:\n        <div></div>\n      }\n    </div>\n  )\n}\n\n//ScenePanel.whyDidYouRender = true;\n\nexport default TeamListPanel;/*React.memo(ScenePanel, (prevProps, nextProps) => {\n  if (prevProps.sceneExpanded === nextProps.sceneExpanded) {\n    return true;\n  }\n  return false;\n});*/\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction AddMenuForm() {\n  const onClick = (event: any) => {\n    global_data.addMenuForm();\n    global_data.updateControlPanel()\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Add\n      </Button>\n    </div>\n  );\n}\n\nexport default AddMenuForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction SubmitMenuForm() {\n  const onClick = (event: any) => {\n    global_data.createMenus(() => global_data.readMenus(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default SubmitMenuForm;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuFormName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.menuForms[index].name = input;\n  };\n\n  return (\n    <TextField id={'menu-form-name-' + index} label=\"Name\"\n      defaultValue={global_data.menuForms[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default MenuFormName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuFormContent(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.menuForms[index].content = input;\n  };\n\n  return (\n    <TextField id={'menuForm-content-' + index} label=\"Content\"\n      defaultValue={global_data.menuForms[index].content} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default MenuFormContent;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nimport MenuFormName from './MenuFormName';\nimport MenuFormContent from './MenuFormContent';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuForm(props: Props) {\n  const { index } = props;\n\n  const onClick = (event: any) => {\n    global_data.removeMenuForm(index);\n    global_data.updateControlPanel();\n  };\n\n  return (\n    <div>\n      <MenuFormName index={index} />\n      <MenuFormContent index={index} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default MenuForm;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport MenuForm from './MenuForm';\n\nfunction MenuFormList() {\n  const menuForms = global_data.menuForms.map((menuForm, i) => <MenuForm index={i} key={`${menuForm.name}-${menuForm.content}-${i}`}/>);\n\n  return (\n    <div>\n      {menuForms}\n    </div>\n  );\n}\n\nexport default MenuFormList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport AddMenuForm from './AddMenuForm';\nimport SubmitMenuForm from './SubmitMenuForm';\nimport MenuFormList from './MenuFormList';\n\nconst CreateMenu = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <AddMenuForm />\n        </Grid>\n        <Grid item xs={4}>\n          <SubmitMenuForm />\n        </Grid>\n        <Grid item xs={12}>\n          <MenuFormList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default CreateMenu;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuInfoName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.menuInfos[index].name = input;\n  };\n\n  return (\n    <TextField id={'menuForm-name-' + index} label=\"Name\"\n      defaultValue={global_data.menuInfos[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default MenuInfoName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuInfoContent(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.menuInfos[index].content = input;\n  };\n\n  return (\n    <TextField id={'menu-form-content-' + index} label=\"Content\"\n      defaultValue={global_data.menuInfos[index].content} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default MenuInfoContent;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\nimport MenuInfoName from './MenuInfoName';\nimport MenuInfoContent from './MenuInfoContent';\n\ninterface Props {\n  index: number;\n}\n\nfunction MenuInfo(props: Props) {\n  const { index } = props;\n\n  const onSaveClick = (event: any) => {\n    global_data.saveMenuInfo(index, () => global_data.readMenus(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  const onRemoveClick = (event: any) => {\n    global_data.removeMenuInfo(index, () => global_data.readMenus(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <MenuInfoName index={index} />\n      <MenuInfoContent index={index} />\n      <TextField id={'menuForm-created-by-' + index} label=\"CreatedBy\" disabled\n        defaultValue={global_data.menuInfos[index].createdBy} margin=\"dense\"/>\n      <TextField id={'menuForm-created-at-' + index} label=\"CreatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.menuInfos[index].createdAt)} margin=\"dense\"/>\n      <TextField id={'menuForm-updated-by-' + index} label=\"UpdatedBy\" disabled\n        defaultValue={global_data.menuInfos[index].updatedBy} margin=\"dense\"/>\n      <TextField id={'menuForm-updated-at-' + index} label=\"UpdatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.menuInfos[index].updatedAt)} margin=\"dense\"/>\n      <Button variant=\"contained\" color=\"primary\" onClick={onSaveClick}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={onRemoveClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default MenuInfo;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport MenuInfo from './MenuInfo';\n\nfunction MenuInfoList() {\n  const menuForms = global_data.menuInfos.map((menuInfo: any, i: number) =>\n    <MenuInfo index={i} key={`${menuInfo.name}-${menuInfo.content}-${menuInfo.createdBy}-${menuInfo.updatedAt}-${i}`}/>);\n\n  return (\n    <div>\n      {menuForms}\n    </div>\n  );\n}\n\nexport default MenuInfoList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuInfoList from './MenuInfoList';\n\nconst MenuControl = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <MenuInfoList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default MenuControl;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction UserInfo(props: Props) {\n  const { index } = props;\n\n  return (\n    <div>\n      <TextField id={'userForm-first-name-' + index} label=\"firstName\" disabled\n        defaultValue={global_data.userInfos[index].firstName} margin=\"dense\"/>\n      <TextField id={'userForm-last-name-' + index} label=\"lastName\" disabled\n        defaultValue={global_data.userInfos[index].lastName} margin=\"dense\"/>\n      <TextField id={'userForm-email-' + index} label=\"email\" disabled\n        defaultValue={global_data.userInfos[index].email} margin=\"dense\"/>\n      <TextField id={'userForm-manager-' + index} label=\"manager\" disabled\n        defaultValue={global_data.userInfos[index].manager ? 'True' : 'False'} margin=\"dense\"/>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nimport UserInfo from './UserInfo';\n\nfunction UserInfoList() {\n  const menuForms = global_data.userInfos.map((userInfo: any, i: number) =>\n    <UserInfo index={i} key={`${userInfo.email}-${i}`}/>);\n\n  const onSearchClick = (event: any) => {\n    global_data.readUsers(() => global_data.readMenus(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      {menuForms}\n      <Button variant=\"contained\" color=\"primary\" onClick={onSearchClick}>\n        Search\n      </Button>\n    </div>\n  );\n}\n\nexport default UserInfoList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../store/global_data';\n\nfunction SubmitMenuForm() {\n  const onClick = (event: any) => {\n    global_data.logout();\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n\nexport default SubmitMenuForm;\n","import React, { useState } from 'react';\n\nimport global_data from '../store/global_data';\n\nimport SelectTabs from './SelectTabs';\nimport SelectTab from './SelectTab';\nimport SelectPanel from './SelectPanel';\nimport CreateMenu from './menu/CreateMenu';\nimport MenuControl from './menu/MenuControl';\nimport UserInfoList from './user/UserInfoList';\nimport Logout from './Logout';\n\nconst ControlPanel = function () {\n  const [flag, setFlag] = useState(true);\n  global_data.updateControlPanel = () => setFlag(!flag);\n  global_data.init();\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, value: number) => {\n    setTabValue(value);\n  };\n\n  return (\n    <div>\n      <SelectTabs\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <SelectTab label=\"Create Menu\" key={'select-tab-create-menust'}/>\n        <SelectTab label=\"Menu Control\" key={'select-tab-menust-control'}/>\n        <SelectTab label=\"User Info\" key={'select-tab-menust-control'}/>\n        <SelectTab label=\"Option\" key={'select-tab-option'}/>\n      </SelectTabs>\n      <SelectPanel expanded={tabValue === 0}>\n        <CreateMenu />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 1}>\n        <MenuControl />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 2}>\n        <UserInfoList />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 3}>\n        <Logout />\n      </SelectPanel>\n    </div>\n  )\n}\n\nControlPanel.whyDidYouRender = true;\n\nexport default ControlPanel;\n","import React from 'react';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'font-awesome/scss/font-awesome.scss';\n\nimport ControlPanel from './components/ControlPanel';\n\nconst appStyle: any = { width:'100vw', height: '100vh' };\n\nfunction App() {\n  return (\n    <div style={appStyle}>\n      <ControlPanel />\n    </div>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nconst whyDidYouRender = require('@welldone-software/why-did-you-render');\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}